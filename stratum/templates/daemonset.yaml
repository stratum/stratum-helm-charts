{{ $configDir := "/config" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}
      {{- with .Values.annotations }}
      annotations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      hostNetwork: true
      initContainers:
        - name: init-huge
          image: alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          command: ['sh', '-c', "sysctl vm.nr_hugepages && sysctl vm.nr_hugepages=128"]
{{ if .Values.virtual_cpu_interface.enabled }}
        - name: init-tap-interface
          # Creates a persistent TAP interface that can be used by other apps to
          # send packets to the switch PCIe CPU port.
          image: alpine
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          # The default TUN device on SONiC Tofino switches is broken. We
          # instead use the SDE provided device in its place.
          # The tunctl command is equivalent to: ip tuntap add {{ .Values.virtual_cpu_interface.interface_name }} mode tap
          command: ['sh', '-c', "tunctl -f /dev/net/bf_tun -t {{ .Values.virtual_cpu_interface.interface_name }}"]
{{ end }}
{{ if or .Values.chassis_config .Values.external_chassis_config}}
        # Copy config from configmap to switch's local filesystem
        - name: config-getter
          image: alpine/git
          imagePullPolicy: IfNotPresent
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CFG_MOUNT
              value: {{ $configDir }}
          workingDir: {{ $configDir }}
          command: ["/opt/configs/stratum-config"]
          volumeMounts:
            - name: config-dir
              mountPath: {{ $configDir }}
            - name: configmap-config
              mountPath: /opt/configs
            - name: chassis-config
              mountPath: /opt/chassis_config/
{{ end }}

      containers:
        - name: stratum-bfrt
          image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CFG_MOUNT
              value: {{ $configDir }}
          command: ["/usr/bin/stratum/startup"]
          tty: true
          stdin: true
          securityContext:
            privileged: true
          volumeMounts:
            # For Stratum container
            - mountPath: /dev
              name: dev
            - mountPath: /sys
              name: sys
            - mountPath: /lib/modules/4.19.0-12-2-amd64
              name: lib-modules
            - mountPath: /var/log/stratum
              name: log
            - mountPath: /etc/sonic
              name: etc-sonic
            # For chassis config loader
            - mountPath: {{ $configDir }}
              name: config-dir
            - mountPath: /usr/bin/stratum
              name: configmap-startup
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . | quote }}
        {{- end }}
      volumes:
        # For Stratum container
        - name: dev
          hostPath:
            path: /dev
        - name: sys
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules/4.19.0-12-2-amd64
        - name: log
          hostPath:
            path: /var/log
        - name: etc-sonic
          hostPath:
            path: /etc/sonic
        # For chassis config loader
        - name: config-dir
          hostPath:
            path: /config
        - name: configmap-config
          configMap:
            name: stratum-config-scripts
            defaultMode: 0744

{{ if or .Values.chassis_config .Values.external_chassis_config}}
        - name: chassis-config
          configMap:
            name: stratum-chassis-configs
            defaultMode: 0744
{{ end }}
        - name: configmap-startup
          configMap:
            name: stratum-startup-scripts
            defaultMode: 0744
